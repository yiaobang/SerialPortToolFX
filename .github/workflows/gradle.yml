name: Java CI with Gradle

on:
  push:
#    branches: [ "master" ]
    tags: # 额外添加对 tags 推送事件的监听
      - 'v*' # 匹配所有以 'v' 开头的标签，例如 v1.0.0, v2.1等
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-package:
    name: Build & Package on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    permissions:
      contents: write

    steps:
      - name: Checkout project
        uses: actions/checkout@v4

      - name: Set up JDK 24 (Zulu, with jmods)
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'zulu'

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4.0.0
        with:
          gradle-version: '8.14.2'

      - name: Grant execute permission for gradlew (Linux/macOS)
        if: runner.os != 'Windows'
        run: chmod +x ./gradlew

      - name: Install ZIP Utility
        if: runner.os == 'Windows'
        run: |
          choco install zip -y

      - name: Build project
        run: ./gradlew build

      - name: Package app with jpackage
        run: ./gradlew jpackage

      - name: Zip packaged app
        run: |
          cd build/jpackage
          # 在这里修改压缩包的命名方式，加入版本号
          # github.ref_name 会自动获取到标签名称，例如 'v1.0.0'
          zip -r ../../packaged-app-${{ github.ref_name }}-${{ matrix.os }}.zip .
          cd ../..

      - name: Upload packaged artifact
        uses: actions/upload-artifact@v4
        with:
          # 修改上传的 artifact 名称，保持一致性
          name: packaged-app-${{ github.ref_name }}-${{ matrix.os }}
          path: packaged-app-${{ github.ref_name }}-${{ matrix.os }}.zip

  release:
    name: Release artifacts
    needs: build-and-package
    runs-on: ubuntu-latest
    permissions:
      contents: write
    # 只有当工作流是由 Git Tag 推送触发时才运行此 job
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v4

      - name: Download packaged artifacts
        uses: actions/download-artifact@v4
        with:
#          # 下载时需要与上传的 artifact 名称保持一致
#          # 使用 `*` 来匹配所有带有版本号和操作系统的 artifact
#          name: packaged-app-${{ github.ref_name }}-*
          path: dist

      - name: List dist contents
        run: ls -l dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            自动化打包并发布，包含 Linux、Windows、macOS 平台的压缩包。
            版本号：${{ github.ref_name }}
          # 确保 files 能够匹配带有版本号的压缩包
          files: dist/**/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}